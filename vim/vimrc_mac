"====[ BEGIN ~/.vimrc ]====

    " Preferred Location: ~/.vimrc
    " Jeff McGovern
    " 6/14/2016
    " 6/15/2016

"====[ Minimal .vimrc (Pilfered) ]====

    " Minimal .vimrc pilfered (exactly) from:
    " http://stackoverflow.com/questions/1840862/favorite-minimalistic-vimrc-configuration
    setlocal backspace=2 " backspace in insert mode works like normal editor
    syntax on            " syntax highlighting
    filetype indent on   " activates indenting for files
    setlocal autoindent  " auto indenting
    setlocal number      " line numbers
    colorscheme desert   " colorscheme desert
    setlocal nobackup    " get rid of anoying ~file

"====[ Dein Plugin Manager ]====

    "dein Scripts-----------------------------
    " To Install:
    " $ mkdir -p ~/.vim/dein/repos/github.com/Shougo/dein.vim
    " $ curl https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh > installer.sh
    " $ sh ./installer.sh ~/.vim/dein/repos/github.com/Shougo/dein.vim
    if &compatible
        set nocompatible " Makes VIM not compatible with VI (be IMproved or whatever)
    endif

    " Required:
    set runtimepath^=/Users/jmcgovern/.vim/dein/repos/github.com/Shougo/dein.vim/repos/github.com/Shougo/dein.vim

    " Required:
    call dein#begin(expand('/Users/jmcgovern/.vim/dein/repos/github.com/Shougo/dein.vim'))

    " Let dein manage dein
    " Required:
    "call dein#add('Shougo/dein.vim')

    " Add or remove your plugins here:
    "call dein#add('Shougo/neosnippet.vim')
    "call dein#add('Shougo/neosnippet-snippets')
    "call dein#add('Rip-Rip/clang_complete')
    call dein#add('flazz/vim-colorschemes')

    " You can specify revision/branch/tag.
    "call dein#add('Shougo/vimshell', { 'rev': '3787e5' })

    " Required:
    call dein#end()

    " Required:
    filetype plugin indent on

    " If you want to install not installed plugins on startup.
    if dein#check_install()
      call dein#install()
    endif
    "End dein Scripts-------------------------

"====[ Color Scheme ]====

    colorscheme desert
    colorscheme slate
    colorscheme xoria256
    colorscheme 3dglasses
    colorscheme Benokai

"====[ Define Shell ]====

    " Sources .bash_profile upon :sh
    set shell=bash\ --login
    " Makes tab complete work like bash
    set wildmode=longest,list

"====[ Ignoring Case ]====

    setlocal ignorecase
    setlocal smartcase

"====[ Highlight Search ]====

    func ToggleHighlight()
        if (&hlsearch == 1)
            set nohlsearch
        else
            set hlsearch
        endif
    endfunc
    nnoremap <C-H> :call ToggleHighlight()<cr>
    set hlsearch

"====[ Arrow Removal ]====

    let g:arrowson=1
    func ArrowsOff()
        let g:arrowson=0
        noremap! <Up>    <NOP>
        noremap! <Down>  <NOP>
        noremap! <Left>  <NOP>
        noremap! <Right> <NOP>
        noremap  <Up>    <NOP>
        noremap  <Down>  <NOP>
        noremap  <Left>  <NOP>
        noremap  <Right> <NOP>
    endfunc
    func ArrowsOn()
        let g:arrowson=1
        noremap  <Up>    <Up>
        noremap  <Down>  <Down>
        noremap  <Left>  <Left>
        noremap  <Right> <Right>
        noremap! <Up>    <Up>
        noremap! <Down>  <Down>
        noremap! <Left>  <Left>
        noremap! <Right> <Right>
    endfunc
    func ToggleArrows()
        if (g:arrowson == 1)
            call ArrowsOff()
        else
            call ArrowsOn()
        endif
    endfunc
    call ArrowsOff()

"====[ Turn Off Error Noises ]====

    setlocal novisualbell " remove annoying visual beeps
    setlocal noerrorbells " remove annoying audio beeps

"====[ Tabs to Spaces ]====

    " DEFAULT: 4 space tabs
    " expandtab: means TAB key will insert <sofftabstop> number of spaces
    " set used because setlocal didn't work for vim -O (inserted tab)
     set tabstop=4
     set shiftwidth=4
     set softtabstop=4
     set expandtab

"====[ Tabs, trailing whitespace, and non-breaking spaces visible ]====

    exec "set listchars=tab:\uBB\uBB,trail:\uB7,nbsp:~"
    set list

"====[ Relative Line Numbering ]====

    " change to absolute line numbering
    function! SetLineNumber()
        setlocal norelativenumber
        setlocal number
    endfunc
    " change to relative line numbering
    function! SetRelativeLineNumber()
        setlocal relativenumber
        setlocal number
    endfunc
    " toggles relative/absolute line
    function! ToggleLineNumStyle()
        if (&relativenumber == 1)
            call SetLineNumber()
        else
            call SetRelativeLineNumber()
        endif
    endfunc
    " ctrl + n calls toggle
    nnoremap <C-n> :call ToggleLineNumStyle()<cr>
    " DEFAULT: relative line numbering
    set relativenumber
    set number
    " only relative when pane in focus
    :autocmd WinLeave * call SetLineNumber()
    :autocmd WinEnter * call SetRelativeLineNumber()
    " switches to absolute when in insert
    autocmd InsertEnter * call SetLineNumber()
    autocmd InsertLeave * call SetRelativeLineNumber()


"====[ Case Insensitive Save and Quit Commands ]====

    :command WQA wqa
    :command WQa wqa
    :command Wqa wqa
    :command QA qa
    :command Qa qa
    :command WA wa
    :command Wa wa
    :command WQ wq
    :command Wq wq
    :command W w
    :command Q q

"====[COMMENTS]=====

    " Command/Comment Legend
    " ,# : shell, perl, etc
    " ,/ : c++
    " ,> : email quote
    " ," : vim
    " ,% : latex, prolog
    " ,! : assembly/X-resources
    " ,; : scheme
    " ,- : sql, ada
    " ,c : clears any of the previous comments

    " LHS Comments
    map ,# :s/^/#/<CR>:nohlsearch<CR>
    map ,/ :s/^/\/\//<CR>:nohlsearch<CR>
    map ,> :s/^/> /<CR>:nohlsearch<CR>
    map ," :s/^/\"/<CR>:nohlsearch<CR>
    map ,% :s/^/%/<CR>:nohlsearch<CR>
    map ,! :s/^/!/<CR>:nohlsearch<CR>
    map ,; :s/^/;/<CR>:nohlsearch<CR>
    map ,- :s/^/--/<CR>:nohlsearch<CR>
    map ,c :s/^\/\/\\|^--\\|^> \\|^[#"%!;]//<CR>:nohlsearch<CR>

    " Wrapping Comments
    map ,* :s/^\(.*\)$/\/\* \1 \*\//<CR>:nohlsearch<CR>
    map ,( :s/^\(.*\)$/\(\* \1 \*\)/<CR>:nohlsearch<CR>
    map ,< :s/^\(.*\)$/<!-- \1 -->/<CR>:nohlsearch<CR>
    map ,d :s/^\([/(]\*\\|<!--\) \(.*\) \(\*[/)]\\|-->\)$/\2/<CR>:nohlsearch<CR>

"====[ FileType Specifics ]====

"====[ END ~/.vimrc ]====
